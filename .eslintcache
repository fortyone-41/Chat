[{"C:\\git\\chat\\src\\index.js":"1","C:\\git\\chat\\src\\reportWebVitals.js":"2","C:\\git\\chat\\src\\App.js":"3","C:\\git\\chat\\src\\socket.js":"4","C:\\git\\chat\\src\\reducer.js":"5","C:\\git\\chat\\src\\pages\\index.js":"6","C:\\git\\chat\\src\\pages\\Home\\Home.js":"7","C:\\git\\chat\\src\\pages\\Auth\\Auth.jsx":"8","C:\\git\\chat\\src\\modules\\index.js":"9","C:\\git\\chat\\src\\modules\\Modal\\Modal.js":"10","C:\\git\\chat\\src\\modules\\Chat\\index.js":"11","C:\\git\\chat\\src\\modules\\LoginForm\\index.js":"12","C:\\git\\chat\\src\\modules\\Chat\\containers\\Chat.js":"13","C:\\git\\chat\\src\\modules\\LoginForm\\containers\\LoginForm.js":"14","C:\\git\\chat\\src\\modules\\Chat\\components\\Chat.jsx":"15","C:\\git\\chat\\src\\modules\\LoginForm\\components\\LoginForm.jsx":"16","C:\\git\\chat\\src\\components\\Components.js":"17","C:\\git\\chat\\src\\components\\Block\\Block.js":"18","C:\\git\\chat\\src\\components\\Button\\Button.js":"19"},{"size":573,"mtime":1608399704802,"results":"20","hashOfConfig":"21"},{"size":375,"mtime":1608119670982,"results":"22","hashOfConfig":"21"},{"size":1949,"mtime":1610819298068,"results":"23","hashOfConfig":"21"},{"size":84,"mtime":1608451398418,"results":"24","hashOfConfig":"21"},{"size":957,"mtime":1610704961945,"results":"25","hashOfConfig":"21"},{"size":88,"mtime":1608137253227,"results":"26","hashOfConfig":"21"},{"size":757,"mtime":1610768462444,"results":"27","hashOfConfig":"21"},{"size":495,"mtime":1610704961944,"results":"28","hashOfConfig":"21"},{"size":88,"mtime":1610704961943,"results":"29","hashOfConfig":"21"},{"size":1775,"mtime":1610757502891,"results":"30","hashOfConfig":"21"},{"size":65,"mtime":1608457466476,"results":"31","hashOfConfig":"21"},{"size":80,"mtime":1608457445515,"results":"32","hashOfConfig":"21"},{"size":72,"mtime":1608457442107,"results":"33","hashOfConfig":"21"},{"size":79,"mtime":1608133378417,"results":"34","hashOfConfig":"21"},{"size":7530,"mtime":1610819283383,"results":"35","hashOfConfig":"21"},{"size":2430,"mtime":1610704961942,"results":"36","hashOfConfig":"21"},{"size":99,"mtime":1608119670980,"results":"37","hashOfConfig":"21"},{"size":243,"mtime":1608119670979,"results":"38","hashOfConfig":"21"},{"size":461,"mtime":1608119670979,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"kcd7s2",{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"42"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"42"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"42"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"42"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"C:\\git\\chat\\src\\index.js",[],["83","84"],"C:\\git\\chat\\src\\reportWebVitals.js",[],"C:\\git\\chat\\src\\App.js",["85"],"C:\\git\\chat\\src\\socket.js",[],"C:\\git\\chat\\src\\reducer.js",["86"],"export default (state, action) => {\r\n    switch (action.type) {\r\n        case 'JOINED':\r\n            return {\r\n                ...state,\r\n                auth: true,\r\n                userName: action.payload.userName,\r\n                roomId: action.payload.roomId,\r\n            }\r\n        case 'SET_DATA':\r\n            return { \r\n                ...state,\r\n                users: action.payload.users,\r\n                messages: action.payload.messages,\r\n            };\r\n\r\n        case 'SET_USERS':\r\n            return {\r\n                ...state,\r\n                users: action.payload,\r\n            };\r\n\r\n        case 'NEW_MESSAGE':\r\n            return {\r\n                ...state,\r\n                messages: [...state.messages, action.payload],\r\n            };\r\n\r\n        case 'GET_ROOMS':\r\n            return {\r\n                ...state,\r\n                rooms: action.payload.data,\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}","C:\\git\\chat\\src\\pages\\index.js",[],"C:\\git\\chat\\src\\pages\\Home\\Home.js",[],"C:\\git\\chat\\src\\pages\\Auth\\Auth.jsx",[],"C:\\git\\chat\\src\\modules\\index.js",[],"C:\\git\\chat\\src\\modules\\Modal\\Modal.js",["87"],"import React from 'react';\r\nimport { Button, Form, Input } from 'antd';\r\nimport { UserOutlined } from '@ant-design/icons';\r\nimport axios from 'axios';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nconst Modal = ({ onJoin }) => {\r\n    const [roomId, setRoomId] = React.useState('');\r\n    let history = useHistory();\r\n    const [isLoading, setLoading] = React.useState(false);\r\n    const onFinish = async (values) => {  //function joining in room\r\n        setLoading(true);\r\n        await axios.post(\"/rooms\", values);\r\n        setTimeout(() => {      //loading current room with delay in 3sec\r\n            setLoading(false)\r\n            onJoin(values);\r\n            history.push(\"/room/\" + values.roomId);  //change location on current room\r\n        }, 1500)\r\n    };\r\n    return (\r\n        <div>\r\n            <Form\r\n                name=\"normal_login\"\r\n                className=\"login-form\"\r\n                initialValues={{\r\n                    remember: true,\r\n                }}\r\n                onFinish={onFinish}\r\n            >\r\n                <Form.Item\r\n                    name=\"roomId\"\r\n                    rules={[\r\n                        {\r\n                            required: true,\r\n                            message: 'Please input your Room!',\r\n                        },\r\n                    ]}\r\n                >\r\n                    <Input prefix={<UserOutlined className=\"site-form-item-icon\" />} value={roomId} placeholder=\"Room\" />\r\n                </Form.Item>\r\n                <Form.Item>\r\n                    <Button type=\"primary\" htmlType=\"submit\" size=\"large\">{!isLoading ? 'Войти в чат' : 'Вход в чат...'}</Button>\r\n                </Form.Item>\r\n            </Form>\r\n        </div >\r\n    );\r\n}\r\n\r\nexport default Modal;\r\n","C:\\git\\chat\\src\\modules\\Chat\\index.js",[],"C:\\git\\chat\\src\\modules\\LoginForm\\index.js",[],"C:\\git\\chat\\src\\modules\\Chat\\containers\\Chat.js",[],"C:\\git\\chat\\src\\modules\\LoginForm\\containers\\LoginForm.js",[],"C:\\git\\chat\\src\\modules\\Chat\\components\\Chat.jsx",["88","89","90"],"import React from 'react';\r\nimport classNames from 'classnames'\r\nimport { Button } from 'antd'\r\nimport Peer from \"simple-peer\";\r\n\r\n\r\nfunction Chat({ users, messages, userName, roomId, onAddMessage, onJoin, socket }) {\r\n  const [messageValue, setMessageValue] = React.useState('');\r\n  const messagesRef = React.useRef(null);\r\n  const [yourID, setYourID] = React.useState(\"\");\r\n  const [stream, setStream] = React.useState();\r\n  const [receivingCall, setReceivingCall] = React.useState(false);\r\n  const [caller, setCaller] = React.useState(\"\");\r\n  const [callerName, setCallerName] = React.useState(\"\");\r\n  const [callerSignal, setCallerSignal] = React.useState();\r\n  const [callAccepted, setCallAccepted] = React.useState(false);\r\n  const userVideo = React.useRef();\r\n  const partnerVideo = React.useRef();\r\n  const constraints = {\r\n    audio: true,\r\n    video: {\r\n        facingMode: 'user'\r\n    }\r\n}\r\n\r\n  const onSendMessage = () => {  //function sending message\r\n    let date = new Date();\r\n    let min = date.getMinutes();\r\n    if (min < 10) {\r\n      min = '0' + min.toString();\r\n    }\r\n\r\n    if (messageValue === \"\") {\r\n      alert(\"Введите текст сообщения\")\r\n    } else {\r\n      socket.emit('ROOM:NEW_MESSAGE', {   //emitting event new message\r\n        userName,\r\n        roomId,\r\n        text: messageValue,\r\n        time: date.getHours() + ':' + min,\r\n      });\r\n      onAddMessage({ userName, text: messageValue, time: date.getHours() + ':' + min });\r\n      setMessageValue('');\r\n    }\r\n\r\n  };\r\n\r\n\r\n  function errorMsg(msg, error) {\r\n    alert(`${msg}`)\r\n    if (typeof error !== 'undefined') {\r\n      console.error(error);\r\n    }\r\n  }\r\n  React.useEffect(() => {\r\n    messagesRef.current.scrollTo(0, 99999);\r\n  }, [messages]);\r\n\r\n\r\n  React.useEffect(() => {  //checking for inputted name, if not inputted, show window with input field for inputing name\r\n    let test;\r\n    let values = {}\r\n    setStream();\r\n    setCallerSignal();\r\n    if (localStorage.userName === undefined) {\r\n\r\n      test = prompt(\"Введите ваше имя\", 'Username');\r\n      if (test === \"\") {\r\n        test = \"Anonymus\";\r\n      }\r\n      if (test === null) {\r\n        test = \"Anonymus\";\r\n      }\r\n      localStorage.userName = test;\r\n    }\r\n    values.roomId = roomId\r\n    values.userName = localStorage.userName\r\n    onJoin(values)\r\n    try{\r\n      navigator.mediaDevices.getUserMedia(constraints).then(stream => {\r\n        setStream(stream);\r\n        if (userVideo.current) {\r\n          userVideo.current.srcObject = stream;\r\n        }\r\n      })\r\n    }\r\n    catch(error){\r\n      if (error.name === 'ConstraintNotSatisfiedError') {\r\n        const v = constraints.video;\r\n        errorMsg(`The resolution ${v.width.exact}x${v.height.exact} px is not supported by your device.`);\r\n      } else if (error.name === 'PermissionDeniedError') {\r\n        errorMsg('Permissions have not been granted to use your camera and ' +\r\n          'microphone, you need to allow the page access to your devices in ' +\r\n          'order for the demo to work.');\r\n      }\r\n      errorMsg(`getUserMedia error: ${error.name}`, error);\r\n    }\r\n    \r\n\r\n\r\n\r\n    socket.on(\"yourID\", (id) => {\r\n      setYourID(id);\r\n    })\r\n\r\n    socket.on(\"hey\", (data) => {\r\n      setReceivingCall(true);\r\n      setCaller(data.from);\r\n      setCallerName(data.fromName);\r\n      setCallerSignal(data.signal);\r\n    })\r\n  }, [])\r\n\r\n  let index = 0;\r\n\r\n  function callPeer(id) {\r\n    const peer = new Peer({\r\n      initiator: true,\r\n      trickle: false,\r\n      config: {\r\n\r\n        iceServers: [\r\n          {\r\n            urls: \"stun:numb.viagenie.ca\",\r\n            username: \"sultan1640@gmail.com\",\r\n            credential: \"98376683\"\r\n          },\r\n          {\r\n            urls: \"turn:numb.viagenie.ca\",\r\n            username: \"sultan1640@gmail.com\",\r\n            credential: \"98376683\"\r\n          }\r\n        ]\r\n      },\r\n      stream: stream,\r\n    });\r\n\r\n    peer.on(\"signal\", data => {\r\n      socket.emit(\"callUser\", { userToCall: id, signalData: data, from: yourID, fromName: userName })\r\n    })\r\n\r\n    peer.on(\"stream\", stream => {\r\n      if (partnerVideo.current) {\r\n        partnerVideo.current.srcObject = stream;\r\n      }\r\n    });\r\n\r\n    socket.on(\"callAccepted\", signal => {\r\n      setCallAccepted(true);\r\n      peer.signal(signal);\r\n    })\r\n\r\n  }\r\n\r\n\r\n  function acceptCall() {\r\n    setCallAccepted(true);\r\n\r\n    const peer = new Peer({\r\n      initiator: false,\r\n      trickle: false,\r\n      stream: stream,\r\n    });\r\n    peer.on(\"signal\", data => {\r\n      socket.emit(\"acceptCall\", { signal: data, to: caller })\r\n    })\r\n\r\n    peer.on(\"stream\", stream => {\r\n      partnerVideo.current.srcObject = stream;\r\n    });\r\n\r\n    peer.signal(callerSignal);\r\n  }\r\n  let UserVideo;\r\n  if (stream) {\r\n    UserVideo = (\r\n      <video className=\"my-video\" playsInline muted ref={userVideo} autoPlay />\r\n    );\r\n  }\r\n\r\n  let PartnerVideo;\r\n  if (callAccepted) {\r\n    PartnerVideo = (\r\n      <video className=\"user-video\" playsInline ref={partnerVideo} autoPlay />\r\n    );\r\n  }\r\n\r\n  let incomingCall;\r\n  let conf;\r\n  if (receivingCall) {\r\n     incomingCall = (\r\n       <div>\r\n         <h1>{callerName} is calling you</h1>\r\n         <button onClick={acceptCall}>Accept</button>\r\n       </div>\r\n      \r\n      \r\n     )\r\n  }\r\ndebugger\r\n  return (\r\n    <div>\r\n      <a href=\"/room\">Rooms</a>\r\n      <div className=\"chat\">\r\n        <div className=\"chat-users\">\r\n          Комната: <b>{roomId}</b>\r\n          <hr />\r\n          <b>Онлайн ({users.length}):</b>\r\n          <ul>\r\n            {Object.keys(users).map((name, index) => (\r\n              <li key={name + index}>{users[name][1]}</li>\r\n            ))}\r\n          </ul>\r\n        </div>\r\n        \r\n        <div className=\"chat-messages\">\r\n          <div ref={messagesRef} className=\"messages\">\r\n            {messages.map((message) => (\r\n              <div key={index++} className={classNames(`message`, { \"message--isme\": message.userName == userName })}>\r\n                <div className=\"message__content\">\r\n                  <div className=\"message__info\">\r\n                    <span className=\"message__date\">{message.userName}:</span>\r\n                    <div className=\"message__bubble\">\r\n                      <div className=\"message__text\">\r\n                        <p>{message.text}</p>\r\n                      </div>\r\n                    </div>\r\n                    <span className=\"message__date\">{message.time}</span>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            ))}\r\n          </div>\r\n          <form>\r\n            <textarea\r\n              value={messageValue}\r\n              onChange={(e) => setMessageValue(e.target.value)}\r\n              required\r\n              className=\"form-control\"\r\n              rows=\"3\"></textarea>\r\n            <button onClick={onSendMessage} type=\"button\" className=\"btn btn-primary\">\r\n              Отправить\r\n          </button>\r\n          </form>\r\n        </div>\r\n      </div>\r\n      <div className=\"video-container\">\r\n        {UserVideo}\r\n        {PartnerVideo}\r\n      </div>\r\n      {Object.keys(users).map((key, index) => {\r\n        \r\n        if (users[key][0] === yourID) {\r\n          return null;\r\n        }\r\n        return (\r\n          <Button type=\"primary\" key={index} style={{ width: \"720px\" }} onClick={() => callPeer(users[key][0])} htmlType=\"submit\" size=\"large\">Call {users[key][1]}</Button>\r\n        );\r\n      })}\r\n      {callAccepted ? '' : incomingCall}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Chat;","C:\\git\\chat\\src\\modules\\LoginForm\\components\\LoginForm.jsx",["91","92"],"import React from 'react';\r\nimport { Button, Block } from '../../../components/Components'\r\nimport { Form, Input } from 'antd';\r\nimport { UserOutlined } from '@ant-design/icons';\r\nimport {  useHistory  } from 'react-router-dom';\r\n\r\n\r\n\r\n\r\nconst Auth = (props) => {\r\n    const [userName, setUserName] = React.useState('');\r\n    const [isLoading, setLoading] = React.useState(false);\r\n    let history = useHistory();\r\n    const onFinish = async (values) => {  //function inputing name\r\n        setLoading(true);\r\n        localStorage.userName= values.userName;  //writing name in local storage\r\n        history.push(\"/room\");      //going to the rooms page\r\n    };\r\n\r\n    React.useEffect(() => {\r\n        if(localStorage.userName !== undefined){  //if inputted name, going to the rooms page\r\n            history.push(\"/room\");\r\n        }\r\n    },[])\r\n    \r\n    return (\r\n        < section className=\"auth\" >\r\n            <div className=\"auth__content\">\r\n                <div className=\"auth__top\">\r\n                    <h2>Войти в аккаунт</h2>\r\n                    <p>Пожалуйста, войдите в свой аккаунт</p>\r\n                </div>\r\n                <Block>\r\n                    <Form\r\n                        name=\"normal_login\"\r\n                        className=\"login-form\"\r\n                        initialValues={{\r\n                            remember: true,\r\n                        }}\r\n                        onFinish={onFinish}\r\n                    >\r\n                        <Form.Item\r\n                            name=\"userName\"\r\n                            rules={[\r\n                                {\r\n                                    required: true,\r\n                                    message: 'Please input your Name!',\r\n                                },\r\n                            ]}\r\n                        >\r\n                            <Input prefix={<UserOutlined className=\"site-form-item-icon\" />} value={userName} placeholder=\"Name\" />\r\n                        </Form.Item>\r\n                        <Form.Item>\r\n                        <Button type=\"primary\" htmlType=\"submit\" size=\"large\">{!isLoading ? 'Перейти в комнаты' : 'Переход в комнаты...'}</Button>\r\n                        </Form.Item>\r\n                    </Form>\r\n                </Block>\r\n            </div>\r\n        </ section>\r\n    );\r\n}\r\n\r\n\r\nexport default Auth;\r\n","C:\\git\\chat\\src\\components\\Components.js",[],"C:\\git\\chat\\src\\components\\Block\\Block.js",[],"C:\\git\\chat\\src\\components\\Button\\Button.js",[],{"ruleId":"93","replacedBy":"94"},{"ruleId":"95","replacedBy":"96"},{"ruleId":"97","severity":1,"message":"98","line":22,"column":7,"nodeType":"99","messageId":"100","endLine":22,"endColumn":14},{"ruleId":"101","severity":1,"message":"102","line":1,"column":1,"nodeType":"103","endLine":37,"endColumn":2},{"ruleId":"97","severity":1,"message":"104","line":8,"column":20,"nodeType":"99","messageId":"100","endLine":8,"endColumn":29},{"ruleId":"105","severity":1,"message":"106","line":112,"column":6,"nodeType":"107","endLine":112,"endColumn":8,"suggestions":"108"},{"ruleId":"97","severity":1,"message":"109","line":189,"column":7,"nodeType":"99","messageId":"100","endLine":189,"endColumn":11},{"ruleId":"110","severity":1,"message":"111","line":219,"column":103,"nodeType":"112","messageId":"113","endLine":219,"endColumn":105},{"ruleId":"97","severity":1,"message":"114","line":11,"column":22,"nodeType":"99","messageId":"100","endLine":11,"endColumn":33},{"ruleId":"105","severity":1,"message":"115","line":24,"column":7,"nodeType":"107","endLine":24,"endColumn":9,"suggestions":"116"},"no-native-reassign",["117"],"no-negated-in-lhs",["118"],"no-unused-vars","'history' is assigned a value but never used.","Identifier","unusedVar","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","'setRoomId' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook React.useEffect has missing dependencies: 'constraints', 'onJoin', 'roomId', and 'socket'. Either include them or remove the dependency array. If 'onJoin' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["119"],"'conf' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'setUserName' is assigned a value but never used.","React Hook React.useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.",["120"],"no-global-assign","no-unsafe-negation",{"desc":"121","fix":"122"},{"desc":"123","fix":"124"},"Update the dependencies array to be: [constraints, onJoin, roomId, socket]",{"range":"125","text":"126"},"Update the dependencies array to be: [history]",{"range":"127","text":"128"},[3356,3358],"[constraints, onJoin, roomId, socket]",[842,844],"[history]"]